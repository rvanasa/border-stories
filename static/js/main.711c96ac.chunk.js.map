{"version":3,"sources":["services/mapRegion.js","services/mapStyle.js","components/Link.js","services/mapGroup.js","components/App.js","serviceWorker.js","index.js"],"names":["MAP_REGIONS","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BQ","BA","BW","BV","BR","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CW","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SX","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW","MAP_STYLES","Link","href","children","target","rel","MAP_GROUPS","crimea","name","regions","radius","center","zoom","description","jammu_kashmir","App","useState","detail","setDetail","queryOptions","arrayFormat","arrayFormatSeparator","skipNull","skipEmptyString","query","queryString","parse","window","location","search","group","region","parsePosition","map","pos","split","getMapParams","getCenter","lat","lng","getZoom","setView","delta","resetAll","digits","Math","pow","n","round","stringify","RegionZone","label","centerLatLng","onClick","defaultOptions","strokeOpacity","strokeColor","fillOpacity","defaultIcon","text","fontSize","position","PerspectiveMarker","expectedGroup","path","google","maps","SymbolPath","BACKWARD_CLOSED_ARROW","fillColor","fillWeight","scale","MapContainer","withScriptjs","withGoogleMap","ref","_map","defaultZoom","defaultCenter","mapTypeControl","streetViewControl","fullscreenControl","styles","Object","entries","id","info","key","mapParams","v","libraries","regionOptions","value","groupInfo","mobile","innerWidth","width","height","className","style","background","minWidth","options","defaultValue","find","isClearable","placeholder","onChange","opt","classNames","opacity","size","maxHeight","lineHeight","overflowY","googleMapURL","k","encodeURIComponent","join","containerElement","loadingElement","minHeight","mapElement","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.711c96ac.chunk.js","sourcesContent":["export const MAP_REGIONS = {\r\n    AF: 'Afghanistan',\r\n    AX: 'Åland Islands',\r\n    AL: 'Albania',\r\n    DZ: 'Algeria',\r\n    AS: 'American Samoa',\r\n    AD: 'Andorra',\r\n    AO: 'Angola',\r\n    AI: 'Anguilla',\r\n    AQ: 'Antarctica',\r\n    AG: 'Antigua and Barbuda',\r\n    AR: 'Argentina',\r\n    AM: 'Armenia',\r\n    AW: 'Aruba',\r\n    AU: 'Australia',\r\n    AT: 'Austria',\r\n    AZ: 'Azerbaijan',\r\n    BS: 'Bahamas',\r\n    BH: 'Bahrain',\r\n    BD: 'Bangladesh',\r\n    BB: 'Barbados',\r\n    BY: 'Belarus',\r\n    BE: 'Belgium',\r\n    BZ: 'Belize',\r\n    BJ: 'Benin',\r\n    BM: 'Bermuda',\r\n    BT: 'Bhutan',\r\n    BO: 'Plurinational State of Bolivia',\r\n    BQ: 'Bonaire, Sint Eustatius, and Saba',\r\n    BA: 'Bosnia and Herzegovina',\r\n    BW: 'Botswana',\r\n    BV: 'Bouvet Island',\r\n    BR: 'Brazil',\r\n    IO: 'British Indian Ocean Territory',\r\n    BN: 'Brunei Darussalam',\r\n    BG: 'Bulgaria',\r\n    BF: 'Burkina Faso',\r\n    BI: 'Burundi',\r\n    KH: 'Cambodia',\r\n    CM: 'Cameroon',\r\n    CA: 'Canada',\r\n    CV: 'Cape Verde',\r\n    KY: 'Cayman Islands',\r\n    CF: 'Central African Republic',\r\n    TD: 'Chad',\r\n    CL: 'Chile',\r\n    CN: 'China',\r\n    CX: 'Christmas Island',\r\n    CC: 'Cocos (Keeling) Islands',\r\n    CO: 'Colombia',\r\n    KM: 'Comoros',\r\n    CG: 'Congo',\r\n    CD: 'The Democratic Republic of the Congo',\r\n    CK: 'Cook Islands',\r\n    CR: 'Costa Rica',\r\n    CI: 'Côte d\\'Ivoire',\r\n    HR: 'Croatia',\r\n    CU: 'Cuba',\r\n    CW: 'Curaçao',\r\n    CY: 'Cyprus',\r\n    CZ: 'Czech Republic',\r\n    DK: 'Denmark',\r\n    DJ: 'Djibouti',\r\n    DM: 'Dominica',\r\n    DO: 'Dominican Republic',\r\n    EC: 'Ecuador',\r\n    EG: 'Egypt',\r\n    SV: 'El Salvador',\r\n    GQ: 'Equatorial Guinea',\r\n    ER: 'Eritrea',\r\n    EE: 'Estonia',\r\n    ET: 'Ethiopia',\r\n    FK: 'Falkland Islands (Malvinas)',\r\n    FO: 'Faroe Islands',\r\n    FJ: 'Fiji',\r\n    FI: 'Finland',\r\n    FR: 'France',\r\n    GF: 'French Guiana',\r\n    PF: 'French Polynesia',\r\n    TF: 'French Southern Territories',\r\n    GA: 'Gabon',\r\n    GM: 'Gambia',\r\n    GE: 'Georgia',\r\n    DE: 'Germany',\r\n    GH: 'Ghana',\r\n    GI: 'Gibraltar',\r\n    GR: 'Greece',\r\n    GL: 'Greenland',\r\n    GD: 'Grenada',\r\n    GP: 'Guadeloupe',\r\n    GU: 'Guam',\r\n    GT: 'Guatemala',\r\n    GG: 'Guernsey',\r\n    GN: 'Guinea',\r\n    GW: 'Guinea-Bissau',\r\n    GY: 'Guyana',\r\n    HT: 'Haiti',\r\n    HM: 'Heard Island and McDonald Mcdonald Islands',\r\n    VA: 'Holy See (Vatican City State)',\r\n    HN: 'Honduras',\r\n    HK: 'Hong Kong',\r\n    HU: 'Hungary',\r\n    IS: 'Iceland',\r\n    IN: 'India',\r\n    ID: 'Indonesia',\r\n    IR: 'Islamic Republic of Iran',\r\n    IQ: 'Iraq',\r\n    IE: 'Ireland',\r\n    IM: 'Isle of Man',\r\n    IL: 'Israel',\r\n    IT: 'Italy',\r\n    JM: 'Jamaica',\r\n    JP: 'Japan',\r\n    JE: 'Jersey',\r\n    JO: 'Jordan',\r\n    KZ: 'Kazakhstan',\r\n    KE: 'Kenya',\r\n    KI: 'Kiribati',\r\n    KP: 'Democratic People\\'s Republic of Korea',\r\n    KR: 'Republic of Korea',\r\n    KW: 'Kuwait',\r\n    KG: 'Kyrgyzstan',\r\n    LA: 'Lao People\\'s Democratic Republic',\r\n    LV: 'Latvia',\r\n    LB: 'Lebanon',\r\n    LS: 'Lesotho',\r\n    LR: 'Liberia',\r\n    LY: 'Libya',\r\n    LI: 'Liechtenstein',\r\n    LT: 'Lithuania',\r\n    LU: 'Luxembourg',\r\n    MO: 'Macao',\r\n    MK: 'the Former Yugoslav Republic of Macedonia',\r\n    MG: 'Madagascar',\r\n    MW: 'Malawi',\r\n    MY: 'Malaysia',\r\n    MV: 'Maldives',\r\n    ML: 'Mali',\r\n    MT: 'Malta',\r\n    MH: 'Marshall Islands',\r\n    MQ: 'Martinique',\r\n    MR: 'Mauritania',\r\n    MU: 'Mauritius',\r\n    YT: 'Mayotte',\r\n    MX: 'Mexico',\r\n    FM: 'Federated States of Micronesia',\r\n    MD: 'Republic of Moldova',\r\n    MC: 'Monaco',\r\n    MN: 'Mongolia',\r\n    ME: 'Montenegro',\r\n    MS: 'Montserrat',\r\n    MA: 'Morocco',\r\n    MZ: 'Mozambique',\r\n    MM: 'Myanmar',\r\n    NA: 'Namibia',\r\n    NR: 'Nauru',\r\n    NP: 'Nepal',\r\n    NL: 'Netherlands',\r\n    NC: 'New Caledonia',\r\n    NZ: 'New Zealand',\r\n    NI: 'Nicaragua',\r\n    NE: 'Niger',\r\n    NG: 'Nigeria',\r\n    NU: 'Niue',\r\n    NF: 'Norfolk Island',\r\n    MP: 'Northern Mariana Islands',\r\n    NO: 'Norway',\r\n    OM: 'Oman',\r\n    PK: 'Pakistan',\r\n    PW: 'Palau',\r\n    PS: 'State of Palestine',\r\n    PA: 'Panama',\r\n    PG: 'Papua New Guinea',\r\n    PY: 'Paraguay',\r\n    PE: 'Peru',\r\n    PH: 'Philippines',\r\n    PN: 'Pitcairn',\r\n    PL: 'Poland',\r\n    PT: 'Portugal',\r\n    PR: 'Puerto Rico',\r\n    QA: 'Qatar',\r\n    RE: 'Réunion',\r\n    RO: 'Romania',\r\n    RU: 'Russian Federation',\r\n    RW: 'Rwanda',\r\n    BL: 'Saint Barthélemy',\r\n    SH: 'Saint Helena, Ascension, and Tristan da Cunha',\r\n    KN: 'Saint Kitts and Nevis',\r\n    LC: 'Saint Lucia',\r\n    MF: 'Saint Martin (French part)',\r\n    PM: 'Saint Pierre and Miquelon',\r\n    VC: 'Saint Vincent and the Grenadines',\r\n    WS: 'Samoa',\r\n    SM: 'San Marino',\r\n    ST: 'Sao Tome and Principe',\r\n    SA: 'Saudi Arabia',\r\n    SN: 'Senegal',\r\n    RS: 'Serbia',\r\n    SC: 'Seychelles',\r\n    SL: 'Sierra Leone',\r\n    SG: 'Singapore',\r\n    SX: 'Sint Maarten (Dutch part)',\r\n    SK: 'Slovakia',\r\n    SI: 'Slovenia',\r\n    SB: 'Solomon Islands',\r\n    SO: 'Somalia',\r\n    ZA: 'South Africa',\r\n    GS: 'South Georgia and the South Sandwich Islands',\r\n    SS: 'South Sudan',\r\n    ES: 'Spain',\r\n    LK: 'Sri Lanka',\r\n    SD: 'Sudan',\r\n    SR: 'Suriname',\r\n    SJ: 'Svalbard and Jan Mayen',\r\n    SZ: 'Swaziland',\r\n    SE: 'Sweden',\r\n    CH: 'Switzerland',\r\n    SY: 'Syrian Arab Republic',\r\n    TW: 'Taiwan',\r\n    TJ: 'Tajikistan',\r\n    TZ: 'United Republic of Tanzania',\r\n    TH: 'Thailand',\r\n    TL: 'Timor-Leste',\r\n    TG: 'Togo',\r\n    TK: 'Tokelau',\r\n    TO: 'Tonga',\r\n    TT: 'Trinidad and Tobago',\r\n    TN: 'Tunisia',\r\n    TR: 'Turkey',\r\n    TM: 'Turkmenistan',\r\n    TC: 'Turks and Caicos Islands',\r\n    TV: 'Tuvalu',\r\n    UG: 'Uganda',\r\n    UA: 'Ukraine',\r\n    AE: 'United Arab Emirates',\r\n    GB: 'United Kingdom',\r\n    US: 'United States',\r\n    UM: 'United States Minor Outlying Islands',\r\n    UY: 'Uruguay',\r\n    UZ: 'Uzbekistan',\r\n    VU: 'Vanuatu',\r\n    VE: 'Bolivarian Republic of Venezuela',\r\n    VN: 'Vietnam',\r\n    VG: 'British Virgin Islands',\r\n    VI: 'U.S. Virgin Islands',\r\n    WF: 'Wallis and Futuna',\r\n    EH: 'Western Sahara',\r\n    YE: 'Yemen',\r\n    ZM: 'Zambia',\r\n    ZW: 'Zimbabwe',\r\n};","export const MAP_STYLES = [\r\n    {\r\n        'featureType': 'administrative',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n            {\r\n                'hue': '#000000'\r\n            },\r\n            {\r\n                'lightness': -100\r\n            },\r\n            {\r\n                'visibility': 'off'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'administrative.country',\r\n        'elementType': 'geometry.stroke',\r\n        'stylers': [\r\n            {\r\n                'color': '#782402'\r\n            },\r\n            {\r\n                'visibility': 'on'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'administrative.country',\r\n        'elementType': 'labels.text',\r\n        'stylers': [\r\n            {\r\n                'visibility': 'simplified'\r\n            },\r\n            {\r\n                'color': '#3c3c3c'\r\n            }\r\n        ]\r\n    },\r\n    // {\r\n    //     'featureType': 'administrative.province',\r\n    //     'elementType': 'labels.text',\r\n    //     'stylers': [\r\n    //         {\r\n    //             'visibility': 'simplified'\r\n    //         },\r\n    //         {\r\n    //             'color': '#787878'\r\n    //         }\r\n    //     ]\r\n    // },\r\n    {\r\n        'featureType': 'administrative.locality',\r\n        'elementType': 'labels.text',\r\n        'stylers': [\r\n            {\r\n                'visibility': 'simplified'\r\n            },\r\n            {\r\n                'color': '#8c8c8c'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'landscape',\r\n        'elementType': 'geometry',\r\n        'stylers': [\r\n            {\r\n                'hue': '#dddddd'\r\n            },\r\n            {\r\n                'saturation': -100\r\n            },\r\n            {\r\n                'lightness': -3\r\n            },\r\n            {\r\n                'visibility': 'on'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'landscape',\r\n        'elementType': 'labels',\r\n        'stylers': [\r\n            {\r\n                'hue': '#000000'\r\n            },\r\n            {\r\n                'saturation': -100\r\n            },\r\n            {\r\n                'lightness': -100\r\n            },\r\n            {\r\n                'visibility': 'off'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'poi',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n            {\r\n                'hue': '#000000'\r\n            },\r\n            {\r\n                'saturation': -100\r\n            },\r\n            {\r\n                'lightness': -100\r\n            },\r\n            {\r\n                'visibility': 'off'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'road',\r\n        'elementType': 'geometry',\r\n        'stylers': [\r\n            {\r\n                'hue': '#bbbbbb'\r\n            },\r\n            {\r\n                'saturation': -100\r\n            },\r\n            {\r\n                'lightness': 26\r\n            },\r\n            {\r\n                'visibility': 'on'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'road',\r\n        'elementType': 'labels',\r\n        'stylers': [\r\n            {\r\n                'hue': '#ffffff'\r\n            },\r\n            {\r\n                'saturation': -100\r\n            },\r\n            {\r\n                'lightness': 100\r\n            },\r\n            {\r\n                'visibility': 'off'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'road.local',\r\n        'elementType': 'all',\r\n        'stylers': [\r\n            {\r\n                'hue': '#ffffff'\r\n            },\r\n            {\r\n                'saturation': -100\r\n            },\r\n            {\r\n                'lightness': 100\r\n            },\r\n            {\r\n                'visibility': 'on'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'transit',\r\n        'elementType': 'labels',\r\n        'stylers': [\r\n            {\r\n                'hue': '#000000'\r\n            },\r\n            {\r\n                'lightness': -100\r\n            },\r\n            {\r\n                'visibility': 'off'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'water',\r\n        'elementType': 'geometry',\r\n        'stylers': [\r\n            {\r\n                'hue': '#ffffff'\r\n            },\r\n            {\r\n                'saturation': -100\r\n            },\r\n            {\r\n                'lightness': 100\r\n            },\r\n            {\r\n                'visibility': 'on'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        'featureType': 'water',\r\n        'elementType': 'labels',\r\n        'stylers': [\r\n            {\r\n                'hue': '#000000'\r\n            },\r\n            {\r\n                'saturation': -100\r\n            },\r\n            {\r\n                'lightness': -100\r\n            },\r\n            {\r\n                'visibility': 'off'\r\n            }\r\n        ]\r\n    }\r\n];","import React from 'react';\r\n\r\nexport default function Link({href, children}) {\r\n    return (\r\n        <a href={href} target=\"_blank\" rel=\"noreferrer noopener\">{children}</a>\r\n    );\r\n}","import React from 'react';\r\nimport Link from '../components/Link';\r\n\r\nexport const MAP_GROUPS = {\r\n    crimea: {\r\n        name: 'Crimea',\r\n        regions: ['US', 'RU', 'UA'],\r\n        radius: 1.5e5,\r\n        center: ['45.3', '34.1'],\r\n        zoom: 6,\r\n        description: <>\r\n            <p>\r\n                In 2014, the Russian Federation began a military occupation of the Crimean peninsula in Ukraine.\r\n                Although\r\n                the United Nations refuses to recognize the annexation, companies such as Google faced pressure to\r\n                redraw borders under threat of criminal prosecution.\r\n            </p>\r\n            <p>\r\n                Google Maps usually draws a special \"disputed\" border between the countries. However, when viewed from\r\n                Russia, the border appears solid. In Ukraine, no border is visible at all.\r\n            </p>\r\n            {/*<p>*/}\r\n            {/*   */}\r\n            {/*</p>*/}\r\n            <p>\r\n                <Link href=\"https://apnews.com/article/dfe637594e36792a2b89b66134ccde0e\">\r\n                    Associated Press, 2019\r\n                </Link>\r\n            </p>\r\n        </>,\r\n    },\r\n    jammu_kashmir: {\r\n        name: 'Jammu and Kashmir',\r\n        regions: ['PK', 'IN', 'CN'],\r\n        radius: 5e5,\r\n        center: [33.77, 76.57],\r\n        zoom: 5,\r\n        description: <>\r\n            <p>\r\n                The conflict over Jammu and Kashmir has raged between India and Pakistan since 1947. Today, the regions\r\n                are fraught with violence and human rights abuses.\r\n            </p>\r\n            <p>\r\n                After receiving threats of severe legal action against Google employees, Jammu and Kashmir\r\n                currently appear \"undisputed\" when viewed from India.\r\n            </p>\r\n            <p>\r\n                Furthermore, China also claims parts of each region, resulting in another \"undisputed\" border when\r\n                viewed from China.\r\n            </p>\r\n            <p>\r\n                <Link href=\"https://www.amnesty.org/en/countries/asia-and-the-pacific/india/report-india/\">\r\n                    Amnesty International, 2019\r\n                </Link>\r\n            </p>\r\n            <p>\r\n                <Link href=\"https://www.washingtonpost.com/news/worldviews/wp/2016/05/06/cartographers-beware-india-warns-of-15-million-fine-for-maps-it-doesnt-like/\">\r\n                    Washington Post, 2016\r\n                </Link>\r\n            </p>\r\n        </>,\r\n    },\r\n    // palestine: {\r\n    //     name: 'Palestine',\r\n    //     regions: ['US', 'IL', 'PS'],\r\n    //     radius: 1.5e5,\r\n    //     center: [31.9522, 35.2332],\r\n    //     zoom: 6,\r\n    // },\r\n};","import React, {useState} from 'react';\r\n\r\nimport {Circle, GoogleMap, Marker, withGoogleMap, withScriptjs} from 'react-google-maps';\r\nimport Select from 'react-select';\r\nimport classNames from 'classnames';\r\nimport './App.scss';\r\nimport {MAP_REGIONS} from '../services/mapRegion';\r\nimport queryString from 'query-string';\r\nimport {MAP_STYLES} from '../services/mapStyle';\r\nimport {MAP_GROUPS} from '../services/mapGroup';\r\nimport {FaArrowUp, FaPlus, FaQuestion, FaQuestionCircle, FaTimes} from 'react-icons/all';\r\nimport Link from './Link';\r\n\r\nexport default function App() {\r\n    let [detail, setDetail] = useState(null);\r\n\r\n    let queryOptions = {\r\n        arrayFormat: 'separator',\r\n        arrayFormatSeparator: ';',\r\n        skipNull: true,\r\n        skipEmptyString: true,\r\n    };\r\n    let query = queryString.parse(window.location.search, queryOptions);\r\n\r\n    let group = query.group || null;\r\n    let region = query.region;// || 'US';\r\n    let center = parsePosition(query.center || '40;40');\r\n    let zoom = +query.zoom || 3;\r\n\r\n    let map = null;\r\n\r\n    function parsePosition(pos) {\r\n        if(!pos) {\r\n            return null;\r\n        }\r\n        if(typeof pos === 'string') {\r\n            pos = pos.split(';');\r\n        }\r\n        let [lat, lng] = pos;\r\n        return [+lat || 0, +lng || 0];\r\n    }\r\n\r\n    function getMapParams() {\r\n        return map && {\r\n            center: [map.getCenter().lat(), map.getCenter().lng()],\r\n            zoom: map.getZoom(),\r\n        };\r\n    }\r\n\r\n    function setView(delta, resetAll) {\r\n        if(delta.center && delta.zoom > 0) {\r\n            let digits = Math.pow(10, delta.zoom);\r\n            delta.center = delta.center.map(n => Math.round(n * digits) / digits);\r\n        }\r\n        window.location.search = queryString.stringify({\r\n            ...(!resetAll && queryString.parse(window.location.search, queryOptions)),\r\n            ...delta,\r\n        }, queryOptions);\r\n    }\r\n\r\n    const RegionZone = ({radius, label, group, region, center, zoom}) => {\r\n        center = parsePosition(center);\r\n        let centerLatLng = {lat: center[0], lng: center[1]};\r\n        let onClick = () => setView({group, region, center, zoom});\r\n        return (\r\n            <>\r\n                <Circle\r\n                    defaultOptions={{\r\n                        strokeOpacity: .3,\r\n                        strokeColor: '#0a4d9f',\r\n                        fillOpacity: .05,\r\n                    }}\r\n                    radius={radius}\r\n                    center={centerLatLng}\r\n                    onClick={onClick}\r\n                />\r\n                {label && (\r\n                    <Marker\r\n                        defaultIcon=\"__hidden__\"\r\n                        label={{\r\n                            text: label,\r\n                            fontSize: '20px',\r\n                        }}\r\n                        position={centerLatLng}\r\n                        onClick={onClick}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    };\r\n\r\n    const PerspectiveMarker = ({label, group: expectedGroup, region, center, zoom}) => {\r\n        if(expectedGroup !== group) {\r\n            return null;\r\n        }\r\n        center = parsePosition(center);\r\n        return (\r\n            <Marker\r\n                defaultIcon={{\r\n                    path: window.google.maps.SymbolPath.BACKWARD_CLOSED_ARROW,\r\n                    strokeOpacity: 0,\r\n                    fillColor: '#0e860e',\r\n                    fillWeight: 5,\r\n                    fillOpacity: .5,\r\n                    scale: 5,\r\n                }}\r\n                label={{\r\n                    text: ((label || region) && 'View from ' + (label || MAP_REGIONS[region] || region)),\r\n                    // fontSize: '20px',\r\n                }}\r\n                position={{lat: center[0], lng: center[1]}}\r\n                onClick={() => setView({group, region, center, zoom})}\r\n            />\r\n        );\r\n    };\r\n\r\n    const MapContainer = withScriptjs(withGoogleMap(() => (\r\n        <GoogleMap\r\n            ref={_map => map = _map}\r\n            defaultZoom={zoom}\r\n            defaultCenter={{lat: center[0], lng: center[1]}}\r\n            defaultOptions={{\r\n                mapTypeControl: false,\r\n                streetViewControl: false,\r\n                fullscreenControl: false,\r\n                styles: MAP_STYLES,\r\n            }}\r\n        >\r\n            {Object.entries(MAP_GROUPS).map(([id, info]) => (\r\n                <RegionZone\r\n                    key={id}\r\n                    label={info.name}\r\n                    group={id}\r\n                    radius={info.radius}\r\n                    center={info.center}\r\n                    zoom={info.zoom}/>\r\n            ))}\r\n\r\n            {/*<PerspectiveMarker group=\"crimea\" region=\"US\" center=\"44;31\" zoom={6} label=\"U.S.A.\"/>*/}\r\n            <PerspectiveMarker group=\"crimea\" region=\"RU\" center=\"45.2;36.5\" zoom={6} label=\"Russia\"/>\r\n            <PerspectiveMarker group=\"crimea\" region=\"UA\" center=\"46.8;33.8\" zoom={6}/>\r\n\r\n            <PerspectiveMarker group=\"jammu_kashmir\" region=\"PK\" center=\"31;70.5\" zoom={5}/>\r\n            <PerspectiveMarker group=\"jammu_kashmir\" region=\"IN\" center=\"28;78\" zoom={5}/>\r\n            <PerspectiveMarker group=\"jammu_kashmir\" region=\"CN\" center=\"37;82\" zoom={5}/>\r\n        </GoogleMap>\r\n    )));\r\n\r\n    let mapParams = {\r\n        v: '3',\r\n        key: 'AIzaSyDR0vaDE6YsHb5MXdBeO9VjujgrM4ic8eQ',\r\n        libraries: 'geometry,drawing,places',\r\n        region,\r\n    };\r\n\r\n    let regionOptions = Object.entries(MAP_REGIONS).map(([value, label]) => ({value, label}));\r\n\r\n    let groupInfo = MAP_GROUPS[group];\r\n\r\n    let mobile = window.innerWidth < 800;\r\n    let width = !mobile ? 300 : null;\r\n    let height = width ? '100vh' : null;\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column flex-md-row\" style={{background: '#222'}}>\r\n            {(!detail || !mobile) && (\r\n                <div className=\"p-2\" style={{minWidth: width, width, height}}>\r\n                    <div className=\"mt-1\">\r\n                        <Select\r\n                            className=\"w-100\"\r\n                            options={regionOptions}\r\n                            defaultValue={regionOptions.find(({value}) => region === value)}\r\n                            isClearable={true}\r\n                            placeholder=\"Choose a perspective...\"\r\n                            onChange={opt => setView({\r\n                                region: opt && opt.value,\r\n                                ...getMapParams(),\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    {groupInfo ? (<>\r\n                        <ul className=\"list-group mt-3 mb-2\">\r\n                            {groupInfo.regions && groupInfo.regions.map(id => (\r\n                                <li key={id}\r\n                                    className={classNames('list-group-item noselect clickable', region === id && 'pl-3')}\r\n                                    style={{opacity: region === id && .5}}\r\n                                    onClick={() => setView({region: id, ...getMapParams()})}>\r\n                                    <h5 className={classNames('mb-0', 'text-' + (region === id ? 'white-50' : 'success'))}>\r\n                                        {MAP_REGIONS[id] || id}\r\n                                    </h5>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </>) : (<>\r\n                        <div className=\"m-5 pl-4 d-none d-md-block\">\r\n                            <FaArrowUp className=\"text-dark\" size={100}/>\r\n                        </div>\r\n                        <div className=\"px-2 mt-4 noselect\">\r\n                            <h3 className=\"text-white\">Does <span className=\"text-warning\">Google Maps</span> spread\r\n                                propaganda?</h3>\r\n                            <h4 className=\"text-white-50\">View borders from different countries and decide for\r\n                                yourself.</h4>\r\n                        </div>\r\n                    </>)}\r\n                </div>\r\n            )}\r\n            {detail ? (\r\n                <div className=\"d-flex flex-column\" style={{maxHeight: '100vh'}}>\r\n                    <div className=\"h4 mb-0 p-4 w-100 text-body\"\r\n                         style={{background: '#1A1A1A', lineHeight: 1.5, overflowY: 'auto'}}>\r\n                        {/*onClick={() => setDetail(null)}>*/}\r\n                        {/*<h1 className=\"text-muted\">Border Stories</h1>*/}\r\n                        <p>\r\n                            In order to appeal to everyone, Google Maps draws national borders\r\n                            differently based on your location.\r\n                        </p>\r\n                        <p className=\"text-success\">\r\n                            Clever, right?\r\n                        </p>\r\n                        <p>\r\n                            Unfortunately, this feature has political consequences. In 2010, a misplaced\r\n                            border between Nicaragua and Costa Rica almost caused an armed conflict known as the <Link\r\n                            href=\"https://opinionator.blogs.nytimes.com/2012/02/28/the-first-google-maps-war/\">\"First\r\n                            Google Maps War.\"</Link>\r\n                        </p>\r\n                        <p className=\"text-success\">\r\n                            Mistakes happen.\r\n                        </p>\r\n                        <p>\r\n                            During the 2014 annexation of Crimea, <Link\r\n                            href=\"https://apnews.com/article/dfe637594e36792a2b89b66134ccde0e\">the Russian government\r\n                            threatened legal action</Link> until Google started showing the contested peninsula as part\r\n                            of\r\n                            Russia.\r\n                        </p>\r\n                        <p>\r\n                            Likewise, Google Maps does not acknowledge the Jammu and Kashmir border conflict (<Link\r\n                            href=\"https://www.amnesty.org/en/countries/asia-and-the-pacific/india/report-india/\">known\r\n                            for its violence and human rights abuses</Link>) when viewed from India.\r\n                        </p>\r\n                        <p className=\"text-success\">\r\n                            By remaining neutral and staying out of trouble, does Google Maps enable countries to\r\n                            spread propaganda?\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"btn btn-lg btn-primary d-block my-3 mx-2 mx-md-0\" onClick={() => setDetail(null)}>\r\n                        Back to map\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <MapContainer\r\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?${Object.entries(mapParams).map(([k, v]) => encodeURIComponent(k) + '=' + encodeURIComponent(v)).join('&')}`}\r\n                    containerElement={<div className=\"flex-grow-1\"/>}\r\n                    loadingElement={<div style={{width: '100%', height: '100%', minHeight: 300}}/>}\r\n                    mapElement={<div style={{width: '100%', height: '100%', minHeight: 300}}/>}\r\n                />\r\n            )}\r\n            {(!detail || !mobile) && (\r\n                <div className=\"p-2 mt-2 mt-md-0\" style={{minWidth: width, width, height}}>\r\n                    {groupInfo ? (<>\r\n                    <span\r\n                        className=\"btn btn-lg btn-primary px-2 pt-0 pb-1 rounded-0 float-right\"\r\n                        onClick={() => setView({}, true)}>\r\n                        <FaTimes/>\r\n                    </span>\r\n                        <h3 className=\"ml-1 text-info noselect\">{groupInfo.name}</h3>\r\n                        <div className=\"px-2\">\r\n                            {groupInfo.description}\r\n                        </div>\r\n                    </>) : (<>\r\n                        <h4 className=\"ml-1 text-muted noselect\">Show a dispute:</h4>\r\n                        <ul className=\"list-group mt-3 mb-2\">\r\n                            {Object.entries(MAP_GROUPS).map(([id, info]) => (\r\n                                <li key={id}\r\n                                    className={classNames('list-group-item noselect clickable', group === id && 'pl-3')}\r\n                                    style={{opacity: group === id && .5}}\r\n                                    onClick={() => setView({\r\n                                        group: id,\r\n                                        // region: info.region,\r\n                                        center: info.center,\r\n                                        zoom: info.zoom,\r\n                                    })}>\r\n                                    <h5 className={classNames('mb-0', 'text-' + (region === id ? 'white-50' : 'info'))}>\r\n                                        {info.name}\r\n                                    </h5>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        {/*<h5 className=\"clickable my-3 text-light pl-3\"*/}\r\n                        {/*    onClick={() => setDetail(detail === 'summary' ? null : 'summary')}>*/}\r\n                        {/*    {detail === 'summary' ? 'Back to map' : 'What?'}*/}\r\n                        {/*</h5>*/}\r\n                        {/*{!detail && (*/}\r\n                        <div\r\n                            className={classNames('m-4 m-md-5 py-2 text-center clickable', detail ? 'text-white' : 'text-muted')}\r\n                            onClick={() => setDetail(detail === 'summary' ? null : 'summary')}>\r\n                            <FaQuestionCircle size={50}/>\r\n                        </div>\r\n                        {/*)}*/}\r\n                    </>)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}